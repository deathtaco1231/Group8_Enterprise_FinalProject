@model GameViewModel

@{
	ViewData["Title"] = "Create a game";

	// Ensure ActiveGame.Teams exists and contains at least 2 teams.
	if (Model.ActiveGame.Teams == null)
	{
		throw new Exception("ActiveGame.Teams is null.");
	}
	while (Model.ActiveGame.Teams.Count < 2)
	{
		Model.ActiveGame.Teams.Add(new Team { Name = "TBD" });
	}
}

<form asp-controller="Game" asp-action="CreateNewGame" asp-route-id=@Model.ActiveGame.TournamentId method="post" enctype="application/x-www-form-urlencoded">
	<div class="text-danger" asp-validation-summary="All">

		<div class="form-group">
			<label asp-for="ActiveGame.GameDateTime">Game Date & Time:</label>
			<input type="datetime" asp-for="ActiveGame.GameDateTime" class="form-control" value="@Model.ActiveGame.GameDateTime.ToString("d")" />
		</div>

		<div class="form-group">
			<label asp-for="ActiveGame.Teams.First().Name">Team 1 Name:</label>
			<input type="text" asp-for="ActiveGame.Teams.First().Name" class="form-control" />
		</div>

		<div class="form-group">
			<label asp-for="ActiveGame.Teams.Last().Name">Team 2 Name:</label>
			<input type="text" asp-for="ActiveGame.Teams.Last().Name" class="form-control" />
		</div>
	</div>

	<button type="submit" class="btn btn-primary">Add</button>
	<a asp-controller="Tournament" asp-action="GetManageForm" asp-route-id="@Model.ActiveGame.TournamentId" class="btn btn-secondary">Cancel</a>
</form>